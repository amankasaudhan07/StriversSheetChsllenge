class Solution {
public:
    TreeNode* findpredecessor(TreeNode* curr)
    {   
        TreeNode* temp=curr;
        temp=temp->left;
        while(temp->right!=NULL&&temp->right!=curr)
        {
            temp=temp->right;
        }

        return temp;
    }
    vector<int> preorderTraversal(TreeNode* root) {
      
       TreeNode* curr=root;
       vector<int>ans;
       while(curr!=NULL)
       {
           if(curr->left==NULL)
            {
                ans.push_back(curr->val);
                curr=curr->right;
            }
            else
            {
                TreeNode* predecessor =findpredecessor(curr);
                if(predecessor->right==NULL)
                {
                    predecessor->right=curr;
                     ans.push_back(curr->val);
                    curr=curr->left; 
                }
                else
                {
                    predecessor->right=NULL;
                   
                    curr=curr->right; 

                }

            }
       }

       return ans;
      
    }
};
