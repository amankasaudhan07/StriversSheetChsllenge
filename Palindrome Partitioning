class Solution {
public:
    bool checkpalindrome(string s,int start,int end)
    {
        while(start<=end)
        {
            if(s[start++]!=s[end--])
             return false;
        }
        return true;
    }
    
    void solve(string s,int ind,vector<vector<string>>&ans,vector<string>&part)
    {
        if(ind==s.length())
        {
            ans.push_back(part);
            return;
        }

        for(int i=ind;i<s.length();i++)
        {
            if(checkpalindrome(s,ind,i))
            {
                part.push_back(s.substr(ind,i-ind+1));
                solve(s,i+1,ans,part);
                part.pop_back();
            }
        }
    }

    vector<vector<string>> partition(string s) {
        vector<vector<string>>ans;
        vector<string>part;
        solve(s,0,ans,part);
        return ans;

    }
};
