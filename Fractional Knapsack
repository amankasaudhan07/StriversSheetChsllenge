class Solution
{
    public:
    //Function to get the maximum total value in the knapsack.
    bool static comparator(Item a,Item b)
    {   
        double r1=(double)a.value/(double)a.weight;
        double r2=(double)b.value/(double)b.weight;
        return r1>r2;
    }
    double fractionalKnapsack(int W, Item arr[], int n)
    {
        // Your code here
        sort(arr,arr+n,comparator);
        
       int currweight=0;
       double  currvalue=0;
       
       for(int i=0;i<n;i++)
       {
           if(arr[i].weight<=W)
           {
               currweight+=arr[i].weight;
               currvalue+=arr[i].value;
               W-=arr[i].weight;
           }
           else
           {
               currvalue+=W*((double)arr[i].value/(double)arr[i].weight);
               return currvalue;
           }
       }
    }
        
};
