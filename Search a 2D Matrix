class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int i=matrix[0].size()-1;
        int row=matrix.size()-1;
        int j=0;
        while(i>=0&&j<=row)
        {
            if(matrix[j][i]>target)
                 i--;
            else if(matrix[j][i]<target)
            {
                j++;
            } 
            else
              return true;    
        }

        return false;

    }
};





class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int row=matrix.size();
        int col=matrix[0].size();
        
        int s=0;
        int e=row*col-1;
        int mid=s+(e-s)/2;
       
        while(s<=e)
        {
             int element=matrix[mid/col][mid%col];
            if(element==target)
            {
                return 1;
            }
            else if(element<target)
            {
                s=mid+1;
            }
            else
            {
                e=mid-1;
            }
            mid=s+(e-s)/2;
        }
        return 0;
    }
};
