class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        int n=s.length();
        int length=0;
        int l=0;
        int r=0;
        set<char>st;
        // st.insert(s[0]);
        while(r<n)
        { 

          while(st.find(s[r])!=st.end())
          {
              st.erase(s[l]);
              l++;
          } 
          st.insert(s[r]);
          length=max(length,r-l+1);
          r++;
        }
        return length;
    }
};



class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        vector<int>mp(256,-1);
        int len=0;
        int l=0;
        int r=0;
        int n=s.length();
        while(r<n)
        {
          if(mp[s[r]]!=-1)
            l=max(l,mp[s[r]]+1);

          mp[s[r]]=r;
          len=max(len,r-l+1);
          r++;    
        }
        return len;
    }
};
