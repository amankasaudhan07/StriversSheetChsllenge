class Solution {
public:
    Node* copyRandomList(Node* head) {
       
       // step 1 -- create new node after every node which is copy of previous
          
         Node* temp = head;
	
    while(temp != NULL) {
        Node* newNode = new Node(temp->val);
        newNode->next = temp->next;
        temp->next = newNode;
        temp = temp->next->next;
    }

       // step -- 2
        // joining random pointer   
       Node* itr = head;
    while(itr != NULL) {
        if(itr->random != NULL)
            itr->next->random = itr->random->next;
        itr = itr->next->next;
    }


        // step 3-- separate both list

        Node* dummy = new Node(0);
       itr = head;
       temp = dummy;
        Node* fast;
    while(itr != NULL) {
        fast = itr->next->next;
        temp->next = itr->next;
        itr->next = fast;
        temp = temp->next;
        itr = fast;
    }
    return dummy->next;
    }
};
